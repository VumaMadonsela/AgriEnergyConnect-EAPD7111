@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @User.Identity?.Name!
            </a>
        </li>
        <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
          @Html.AntiForgeryToken()
          <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

<script>
    async function logoutUser() {
        try {
            await fetch('/Identity/Account/Logout', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                }
            });
            window.location.href = '/';
        } catch (err) {
            console.error('Logout failed:', err);
        }
    }
</script>
